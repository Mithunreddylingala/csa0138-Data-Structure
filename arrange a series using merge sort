#include <stdio.h>
#include <stdlib.h>

void merge(int arr[], int left[], int lsize, int right[], int rsize) 
{
    int i = 0, j = 0, k = 0;
    while (i < lsize && j < rsize) 
	{
        if (left[i] <= right[j]) 
		{
            arr[k++] = left[i++];
        } else {
            arr[k++] = right[j++];
        }
    }
    while (i < lsize) 
	{
        arr[k++] = left[i++];
    }
    while (j < rsize) 
	{
        arr[k++] = right[j++];
    }
}
void mergeSort(int arr[], int n) 
{
    if (n < 2) 
	{
        return;
    }
    int mid = n / 2;
    int left[mid];
    int right[n - mid];
    for (int i = 0; i < mid; i++) 
	{
        left[i] = arr[i];
    }
    for (int i = mid; i < n; i++) 
	{
        right[i - mid] = arr[i];
    }
    mergeSort(left, mid);
    mergeSort(right, n - mid);
    merge(arr, left, mid, right, n - mid);
}
void printArray(int arr[], int n) 
{
    for (int i = 0; i < n; i++) 
	{
        printf("%d ", arr[i]);
    }
    printf("\n");
}
int main() 
{
    int arr[] = {12, 11, 13, 5, 6};
    int n = sizeof(arr) / sizeof(arr[0]);
    printf("Original array: \n");
    printArray(arr, n);
    mergeSort(arr, n);
    printf("\nSorted array: \n");
    printArray(arr, n);
    return 0;
}
